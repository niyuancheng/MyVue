{"version":3,"file":"vue.js","sources":["../src/globalAPI.js","../src/data/array.js","../src/data/dep.js","../src/data/index.js","../src/nextTick.js","../src/data/watcher.js","../src/template/gen.js","../src/template/parse.js","../src/template/index.js","../src/hooks.js","../src/utils/getFuncName.js","../src/init.js","../src/vdom/index.js","../src/vdom/patch.js","../src/lifecycle.js","../src/index.js"],"sourcesContent":["let LIFECYCLE = [ //存放Vue实例的生命周期数组\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestory',\r\n    'destoryed'\r\n]\r\n\r\nlet strategy = {} //策略数组\r\n\r\nLIFECYCLE.forEach(hook=>{ //对于所有的生命周期钩子其具体的更新策略\r\n    strategy[hook] = function(p,c) {\r\n        if(p) {\r\n            if(c) {\r\n                return p.concat(c);\r\n            } else {\r\n                return p;\r\n            }\r\n        } else {\r\n            return [c];\r\n        }\r\n    }\r\n})\r\n\r\nexport default function mergeOptions(parent,child) {\r\n\r\n    const options = {};\r\n\r\n    for(let key in parent) {\r\n        mergeFiled(key);\r\n    }\r\n    for(let key in child) {\r\n        if(!parent.hasOwnProperty(key)) mergeFiled(key);\r\n    }\r\n\r\n    function mergeFiled(key) { //对于不同的key有不同的合并策略，例如对于key = data时合并需要新的覆盖旧的选项，而对于key = created这种生命周期钩子则需要合并成一个数组\r\n        if(strategy[key]) {\r\n            options[key] = strategy[key](parent[key],child[key])\r\n        } else { //如果对应的key在策略数组中不存在的话则进行默认的合并方式也就是新的覆盖旧的,子覆盖父\r\n            options[key] = child[key] || parent[key];\r\n        }\r\n    }\r\n\r\n    return options;\r\n}","import observe from \"./index\";\r\n\r\nlet methods = [\r\n    'push',\r\n    'pop',\r\n    'unshift',\r\n    'shift',\r\n    'splice',\r\n    'sort'\r\n]\r\n\r\nvar arrMethods = {}; //arrMethods用于拦截实例数组调用对应的方法\r\n\r\nmethods.forEach(el=>{\r\n    let method = Array.prototype[el]; //将数组原型上的真正方法保存下来\r\n    arrMethods[el] = function() {\r\n        console.log(`触发了数组的${method}方法`)\r\n        switch(el) { //判断具体的调用方法\r\n            case \"push\":\r\n            case \"unshift\":\r\n                Array.from(arguments).forEach(item=>{\r\n                    observe(item);\r\n                })\r\n                break;\r\n            case \"pop\":\r\n            case \"shift\":\r\n                break;\r\n            case \"splice\":\r\n                Array.from(arguments).slice(2).forEach(item=>{\r\n                    observe(item);\r\n                })\r\n                break;\r\n            case 'sort':\r\n                \r\n                break;\r\n        }\r\n        this.__ob__.dep.notify();\r\n        return method.apply(this,arguments);\r\n    }\r\n})\r\n\r\nexport default arrMethods","let id = 0;\r\n\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++; //id唯一标识一个watcher，也就是说每一个watcher都有一个独有的id号\r\n        this.subs = []; //存储着dep的监听者也就是观察者，当Dep实例对应的属性发生改变时，对应subs中存储的观察者就会触发调用\r\n    }\r\n\r\n    depend() { //get时添加依赖\r\n        if (!this.subs.includes(Dep.target)) {\r\n            this.subs.push(Dep.target);\r\n            if (!Dep.target.deps.includes(this)) {\r\n                Dep.target.deps.push(this);\r\n            }\r\n        }\r\n    }\r\n\r\n    notify() { //set时触发依赖\r\n        this.subs.forEach(watcher => {\r\n            watcher.update();\r\n        })\r\n    }\r\n}\r\n\r\nexport default Dep;","//此模块用于实现数据的响应式    \r\n\r\nimport arrMethods from \"./array\";\r\nimport Dep from \"./dep\";\r\n\r\nfunction observe(obj) { //observe函数的中作用就是为了将obj对象中的属性都变为访问器属性\r\n    let ob;\r\n    if(typeof obj !== \"object\") return;\r\n    if (obj.__ob__) { // 该对象有__ob__则不进行递归\r\n        ob = obj.__ob__; //给对象添加__ob__表示该对象被观察了，方便程序员的调试\r\n    } else {\r\n        ob = new Observer(obj); //通过new Observer类来标记该对象，也就是给obj上添加__ob__属性来实现观测状态的标记，防止循环引用\r\n    }\r\n    return ob;\r\n}\r\n\r\nclass Observer {\r\n    constructor(obj) {\r\n        obj.__ob__ = this;\r\n        this.dep = new Dep(); //dep可以看成是依赖收集器\r\n        Object.defineProperty(obj,\"__ob__\",{\r\n            enumerable:false,\r\n            writable:false,\r\n            configurable:false\r\n        })\r\n        if(Array.isArray(obj)) {\r\n            this.walkArray(obj)\r\n        } else {\r\n            this.walk(obj)\r\n        }\r\n    }\r\n\r\n    walk(obj) {\r\n        Object.keys(obj).forEach(key=>{\r\n            defineReactive(obj,key)\r\n        })\r\n    }\r\n\r\n    walkArray(obj) {\r\n        Object.setPrototypeOf(obj,arrMethods);\r\n        for(let el of obj) {\r\n            observe(el);\r\n        }\r\n    }\r\n}\r\n\r\nfunction dependArray(arr) { //递归地为每一个数组都添加dep收集器属性，一旦当发生数组的push,pop等改变原数组的方法时触发watcher的调用也就是模板的重新编译\r\n    if(Array.isArray(arr)) {\r\n        arr.__ob__.dep.depend();\r\n        for(let el of arr) dependArray(el)\r\n    }\r\n}\r\n\r\n//递归地定义响应式数据\r\nfunction defineReactive(obj,key,data) {\r\n    data = data || obj[key];\r\n    let dep = new Dep(); //每一个属性都对应一个Dep的实例\r\n    observe(obj[key]); //先将obj[key]对应的属性值也变成响应式的\r\n    Object.defineProperty(obj,key,{\r\n        get() { //get时收集依赖\r\n            console.log(`触发了属性${key}的get方法`)\r\n            if(Dep.target) {\r\n                dep.depend();\r\n                if(Array.isArray(data)) {\r\n                    dependArray(data);\r\n                }\r\n            }\r\n            return data;\r\n        },\r\n        set(newVal) { //set时触发依赖\r\n            if(newVal !== data) {\r\n                console.log(`属性值${key}发生了变化`)\r\n                observe(newVal); //先将传入的newVal也变成访问器属性\r\n                data = newVal;\r\n                dep.notify();\r\n            }\r\n        }\r\n    })\r\n}\r\n\r\nexport default observe;","export function nextTick(fn) {\r\n    Promise.resolve().then(()=>fn());\r\n}","import Dep from \"./dep\";\r\nimport { nextTick } from '../nextTick'\r\nlet id = 0;\r\n\r\nlet stack = [];\r\nfunction pushTarget(watcher) {\r\n    stack.push(watcher);\r\n    Dep.target = watcher;\r\n}\r\n\r\nfunction popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1];\r\n}\r\n\r\nclass Watcher {\r\n    constructor(vm, fn, options,cb) {\r\n        this.vm = vm;\r\n        this.id = id++;\r\n        this.getter = fn; //fn很大概率为渲染视图的函数\r\n        this.deps = []; //deps数组中存储着该观察者订阅了多少了变量对象\r\n        this.cb = cb || (()=>{});\r\n        if(options) {\r\n            this.lazy = options.lazy || false;\r\n            this.dirty = this.lazy;\r\n            this.user = options.user;\r\n        }\r\n        \r\n        if(!this.dirty) this.value = this.get();\r\n    }\r\n\r\n    evaluate() {\r\n        this.dirty = false;\r\n        return this.get();\r\n    }\r\n\r\n    depend() {\r\n        this.deps.forEach(dep=>{\r\n            dep.depend();\r\n        })\r\n    }\r\n\r\n    get() {\r\n        pushTarget(this);\r\n        let value = this.getter.call(this.vm);\r\n        popTarget();\r\n        return value;\r\n    }\r\n\r\n    update() { //当watcher依赖的属性发生变化的时候执行watcher中的update方法\r\n        if(this.user) { \r\n            let oldVal = this.value;\r\n            let newVal = this.get();\r\n            this.cb.call(this.vm,newVal,oldVal);\r\n        } else {\r\n            if(this.lazy) {\r\n                this.dirty = true;\r\n            } else {\r\n                queueWatcher(this);\r\n            }\r\n        }\r\n        \r\n        \r\n    }\r\n\r\n    run() { //启动watcher的执行\r\n        this.get();\r\n    }\r\n}\r\n\r\nlet queue = [];\r\nlet has = {};\r\nlet pending = false;\r\n\r\nfunction flushScheduleQueue() { //实现视图的异步更新\r\n    let coppyQueue = queue.slice(0);\r\n    queue = [];\r\n    has = {};\r\n    pending = false;\r\n    coppyQueue.forEach(watcher => {\r\n        watcher.run();\r\n    })\r\n}\r\n\r\nfunction queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (!has[id]) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n        if (!pending) {\r\n            pending = true;\r\n            nextTick(flushScheduleQueue);\r\n        }\r\n    }\r\n}\r\n\r\nexport default Watcher;","const ELEMENT_TYPE = 1; //元素节点\r\nconst TEXT_TYPE = 2; //文本节点\r\nconst textRegExp = /\\{\\{\\s*(.+?)\\}\\}/g //匹配mustache模板字符串\r\nfunction genText(text) { //用于生成mustache类型的模板字符串\r\n    if(textRegExp.test(text)) {\r\n        let match;\r\n        let tokens = [];\r\n        textRegExp.lastIndex = 0;\r\n        let lastIndex = textRegExp.lastIndex;\r\n        while(match = textRegExp.exec(text)) {\r\n            let index = match.index;\r\n            if(index>lastIndex) tokens.push(`${JSON.stringify(text.slice(lastIndex,index))}`);\r\n            tokens.push(`_s(${match[1]})`);\r\n            lastIndex = textRegExp.lastIndex;\r\n        }\r\n        tokens.push(`${JSON.stringify(text.slice(lastIndex))}`);\r\n        return `_v(${tokens.join(\"+\")})`\r\n    } else {\r\n        return `_v(${JSON.stringify(text)})`\r\n    }\r\n}\r\n\r\nfunction genChildren(children) { //生成子节点对应的字符串\r\n    let res = ``;\r\n    res += `[`;\r\n\r\n    res += children.map(child => {\r\n        //首先判断节点类型\r\n        if (child.type === ELEMENT_TYPE) { //元素节点的话\r\n            return `${genCode(child)}`;\r\n        } else if (child.type === TEXT_TYPE) { //文本节点的话\r\n            return `${genText(child.text)}`;\r\n        }\r\n    }).join(\",\");\r\n    res += ']';\r\n    return res;\r\n}\r\n\r\nfunction genProps(attrs) {\r\n    let res = `{`;\r\n    res += attrs.map(attr => {\r\n        if (attr.key !== \"style\") { //如果该属性值不为style的话\r\n            return `${attr.key}:${JSON.stringify(attr.value)}`;\r\n        } else {\r\n            let str = ``;\r\n            str += `style:{`;\r\n            str += attr.value.split(\";\").map(obj => {\r\n                let [key, value] = obj.split(\":\");\r\n                return `${key}:${JSON.stringify(value)}`;\r\n            }).join(\",\");\r\n            str += `}`;\r\n            return str;\r\n        }\r\n    }).join(\",\");\r\n    res += `}`;\r\n    return res;\r\n}\r\n\r\nexport function genCode(node) { //根据AST语法树拼接JS字符串\r\n    return `_c(${JSON.stringify(node.tagName)}${node.attrs.length === 0 ? \",undefined\" : \",\" + genProps(node.attrs)}${node.children.length > 0 ? \",\" + genChildren(node.children) : \"\"})`\r\n}","const cname = `[a-zA-Z_][\\\\-\\\\.a-zA-Z0-9_]*` //标签可能出现的所有标签名\r\nconst qnameCapture = `((?:${cname}:)?${cname})` //考虑到带有命名空间的标签出现的情况因此在此处使用(?:${cname}:)?表明括号中的捕获重复0-1次\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`) //开始标签的前面open部分，也就是 < 往后的标签名部分\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)\r\nconst startTagClosed = /^\\s*(\\/)?>/ //开始标签的结束部分，(\\/)?是防止该标签是自闭合标签 ，例如<input xx />\r\nconst attribute = /^\\s*([^\\s'\"<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"|'([^']*)'|([^\\s'\"<>\\/=]+)))?/ //匹配标签中的属性，格式为key= value\r\n\r\n//parseHtml用于解析模板生成AST抽象语法树\r\nexport function parseHTML(html) {\r\n    const ELEMENT_TYPE = 1; //元素节点\r\n    const TEXT_TYPE = 2; //文本节点\r\n    const ROOT_TYPE = 3;\r\n    const root = {\r\n        children:[],\r\n        type:ROOT_TYPE,\r\n        parent:null,\r\n        tagName:\"Root\"\r\n    }\r\n    const stack = [root];\r\n    let textEnd;\r\n    function advance(n) {\r\n        html = html.slice(n);\r\n    }\r\n\r\n    function parseStartTagOpen() {\r\n        let tagName = html.match(startTagOpen)[1];\r\n        let resName = html.match(startTagOpen)[0];\r\n\r\n        let tag = {\r\n            tagName,\r\n            parent: stack[stack.length - 1] || null,\r\n            children: [],\r\n            attrs: [],\r\n            type:ELEMENT_TYPE\r\n        }\r\n        stack[stack.length-1].children.push(tag);\r\n        stack.push(tag);\r\n        \r\n        advance(resName.length);\r\n    }\r\n    function parseAttrs() { //解析标签中的所有属性\r\n        let currentNode = stack[stack.length - 1];\r\n        while (!startTagClosed.test(html)) {\r\n            let resArry = html.match(attribute);\r\n            let attr = {\r\n                key: resArry[1],\r\n                value: resArry[3] || resArry[4] || resArry[5] || true\r\n            }\r\n            currentNode.attrs.push(attr);\r\n            advance(html.match(attribute)[0].length);\r\n        }\r\n    }\r\n\r\n    function parseStartTagClosed() { //处理开始标签的末尾/结束部分\r\n        let resName = html.match(startTagClosed)[0];\r\n        advance(resName.length);\r\n    }\r\n\r\n    function parseEndTag() {\r\n        let resName = html.match(endTag)[0];\r\n        stack.pop();\r\n        advance(resName.length);\r\n    }\r\n\r\n    function parseText() {\r\n        let text = html.substr(0, textEnd);\r\n        if(/[^\\s]+/.test(text)) stack[stack.length-1].children.push({\r\n            text,\r\n            type:TEXT_TYPE,\r\n            parent:stack[stack.length-1] || null\r\n        })\r\n        advance(text.length);\r\n    }\r\n\r\n    while (html.length) {\r\n        textEnd = html.indexOf(\"<\");\r\n        if (textEnd === 0) {\r\n            if (!endTag.test(html)) { //如果该<字符是开始标签上的字符时\r\n                parseStartTagOpen();\r\n                parseAttrs();\r\n                parseStartTagClosed();\r\n            } else {\r\n                parseEndTag();\r\n            }\r\n        } else {\r\n            parseText();\r\n        }\r\n    }\r\n\r\n    return root;\r\n\r\n}","import { genCode } from \"./gen\"\r\nimport { parseHTML } from \"./parse\"\r\n\r\n//该模块用于模板编译功能的实现\r\nexport default function compileToFunction(html) {\r\n    //1.生成AST抽象语法树\r\n    let ast = parseHTML(html);\r\n    console.log(ast);\r\n    //2.根据抽象语法树生成JS字符串\r\n    let code = genCode(ast.children[0]);\r\n\r\n    let render = new Function(`with(this){return ${code}}`); //通过new Function这种形式形成最终的render函数\r\n\r\n    console.log(render);\r\n\r\n    return render;\r\n}","export function callHooks(vm,hooks) {\r\n    if(vm.$options[hooks]) {\r\n        vm.$options[hooks].forEach(hook=>{\r\n            hook.call(vm)\r\n        });\r\n    }\r\n}","export default function getFunctionName(fun) {\r\n    if (fun.name !== undefined)\r\n        return fun.name;\r\n    var ret = fun.toString();\r\n    ret = ret.substr('function '.length);\r\n    ret = ret.substr(0, ret.indexOf('('));\r\n    return ret;\r\n}","import observe from \"./data/index\";\r\nimport Watcher from \"./data/watcher\";\r\nimport mergeOptions from \"./globalAPI\";\r\nimport { nextTick } from \"./nextTick\";\r\nimport compileToFunction from \"./template/index.js\";\r\nimport { callHooks } from './hooks'\r\nimport getFuncName from './utils/getFuncName'\r\nimport Dep from \"./data/dep\";\r\n//该函数用于对Vue的状态进行初始化\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        let vm = this;\r\n        vm.$options = mergeOptions(Vue.options, options);\r\n        callHooks(vm, 'beforeCreate')\r\n        initState(vm); //对options中的所有配置选项进行初始化，包括data.props,method,watch,computed,direactives等\r\n        callHooks(vm, 'created');\r\n        initTemplate(vm); //在传入的配置选项全部初始化完成后开始执行模板的编译生成虚拟DOM\r\n    }\r\n\r\n    Vue.prototype.$mount = function (el) { //$mount函数的作用就是开始模板编译生成render函数的过程并且将render生成的虚拟DOM渲染成真实的DOM并且挂载到DOM树上\r\n        let vm = this;\r\n        let opts = vm.$options;\r\n        if (!opts.render) { //如果没有render函数的话则需要进行模板编译\r\n            let template;\r\n            if (opts.template) { //template的优先级大于el\r\n                template = opts.template;\r\n            } else {\r\n                template = document.querySelector(el).outerHTML;\r\n            }\r\n            opts.render = compileToFunction(template); //compileToFunction开始进入模板编译阶段\r\n        } else { //如果有render函数的话则直接进行调用，无需经过模板编译的过程\r\n            //此处直接跳过\r\n        }\r\n        mountComponent(el, vm); //生成并且渲染虚拟DOM上树\r\n    }\r\n\r\n    Vue.prototype.$nextTick = nextTick;\r\n\r\n    Vue.prototype.$watch = function (expr, cb) {\r\n        let fn = () => this[expr];\r\n\r\n        return new Watcher(this, fn, { user: true }, cb)\r\n    }\r\n}\r\n\r\nfunction initData(vm) {\r\n    observe(vm.$options.data);\r\n    let opts = vm.$options;\r\n    vm._data = opts.data; //数据劫持\r\n    for (let key in opts.data) {\r\n        //直接将data中的属性绑定到vm实例上，进行了一次数据代理\r\n        Object.defineProperty(vm, key, {\r\n            get() {\r\n                return opts.data[key];\r\n            },\r\n            set(val) {\r\n                opts.data[key] = val;\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\n\r\nfunction getComputedProperty(context, key) {\r\n    return function () {\r\n        let watcher = context._computedWatchers[key]\r\n        if (watcher.dirty) {\r\n            watcher.value = watcher.evaluate();\r\n            if (Dep.target) {\r\n                watcher.depend();\r\n            }\r\n        }\r\n        return watcher.value;\r\n    }\r\n}\r\n\r\nfunction defineComputedProperty(vm, key, computed) {\r\n    let getter = typeof computed === 'function' ? computed : computed.get;\r\n    let setter = typeof computed === 'function' ? (() => { }) : (computed.set || (() => { }));\r\n    let name = typeof computed === 'function' ? getFuncName(computed) : computed;\r\n\r\n    Object.defineProperty(vm, name, {\r\n        get: getComputedProperty(vm, key),\r\n        set: setter\r\n    });\r\n}\r\n\r\nfunction initComputed(vm) { //初始化计算属性\r\n    let computeds = vm.$options.computed;\r\n    let watchers = vm._computedWatchers = {};\r\n    for (let key in computeds) {\r\n        let getter = typeof computeds[key] === 'function' ? computeds[key] : computeds[key].get;\r\n        console.log(getter)\r\n        watchers[key] = new Watcher(vm, getter, { lazy: true });\r\n        defineComputedProperty(vm, key, computeds[key]);\r\n    }\r\n}\r\n\r\nfunction initWatch(vm) { //初始化监视属性\r\n    let watches = vm.$options.watch;\r\n    for (let key in watches) {\r\n        let watch = watches[key];\r\n        let handler = typeof watch === 'function' ? watch : watch.handler;\r\n        let propName = typeof watch === 'function' ? getFuncName(watch) : key;\r\n        console.log(propName, handler);\r\n\r\n        vm.$watch(propName, handler);\r\n    }\r\n\r\n}\r\n\r\nfunction initState(vm) {\r\n    let opts = vm.$options;\r\n    if (opts.data) {\r\n        initData(vm); //初始化数据\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm); //初始化计算属性\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm);\r\n    }\r\n}\r\n\r\nfunction initTemplate(vm) {\r\n    if (vm.$options.el) { //如果options中包含有el属性则自动调用$mount方法进行模板编译过程\r\n        vm.$mount(vm.$options.el);\r\n    }\r\n}\r\n\r\nfunction mountComponent(el, vm) {\r\n    let updateComponet = () => { //模板的重新编译或者初次编译\r\n        let dom;\r\n        if (Vue._vnode) {\r\n            dom = Vue._vnode;\r\n        } else {\r\n            dom = document.querySelector(el);\r\n        }\r\n        vm._update(dom);\r\n    }\r\n    let watcher = new Watcher(vm, updateComponet); //watcher观察者，通常一个Vue实例或者一个Vue组件对应一个Watcher实例，也就是观察者对象\r\n\r\n}","function vnode(vm,tag,key,props,children,text) { //该函数用于生成虚拟dom节点\r\n    return {\r\n        vm,\r\n        tag,\r\n        key,\r\n        props,\r\n        children,\r\n        text\r\n    }\r\n}\r\n\r\n\r\nexport function createElementVNode(vm,tag,props,children) { //创建元素类型的虚拟节点\r\n    if(!props) props = {};\r\n    let key = props.key;\r\n    if(props.key) delete props.key;\r\n    //if(children && children.length === 1) children = [children];\r\n    return vnode(vm,tag,key,props,children,undefined);\r\n}\r\n\r\nexport function createTextVNode(vm,text) { //创建文本类型的节点\r\n    return vnode(vm,undefined,undefined,undefined,undefined,text);\r\n}","function appendAttrs(vnode) {\r\n    for (let key in vnode.props) {\r\n        if (key === 'style') {\r\n            let res = ``\r\n            for (let item in vnode.props.style) {\r\n                res += `${item}:${vnode.props.style[item]};`;\r\n            }\r\n            vnode.el.setAttribute(\"style\", res);\r\n        } else {\r\n            vnode.el.setAttribute(key, vnode.props[key]);\r\n        }\r\n    }\r\n}\r\nfunction createElement(vnode) { //根据虚拟节点vnode创建对应的真实DOM元素\r\n    if (vnode.tag) {\r\n        vnode.el = document.createElement(vnode.tag);\r\n        appendAttrs(vnode);\r\n        if (vnode.children) {\r\n            vnode.children.forEach(child => {\r\n                vnode.el.appendChild(createElement(child));\r\n            })\r\n        }\r\n    } else {\r\n        vnode.el = document.createTextNode(vnode.text);\r\n    }\r\n    return vnode.el;\r\n\r\n}\r\n\r\nexport function patch(oldVNode, newVNode) {\r\n    if (oldVNode.nodeType === 1) { //如果是真实的DOM元素的话则进行初次渲染\r\n        let dom = createElement(newVNode);\r\n        oldVNode.parentNode.insertBefore(dom, oldVNode.nextSibling);\r\n        oldVNode.parentNode.removeChild(oldVNode);\r\n    } else { //如果不是则需要进入diff算法环节比较新旧虚拟节点的差异\r\n\r\n        /*\r\n                diff算法\r\n        */\r\n\r\n\r\n        console.log(\"开始进行diff算法\");\r\n    }\r\n\r\n    Vue._vnode = newVNode;\r\n}","import { createElementVNode, createTextVNode } from \"./vdom/index\" //创建不同类型的虚拟节点\r\nimport { patch } from \"./vdom/patch\";\r\n\r\n\r\nexport function initLifeCycle(Vue) {\r\n    Vue.prototype._c = function(tag,props,children) { //创建元素节点\r\n        return createElementVNode(this,...arguments);\r\n    }\r\n\r\n    Vue.prototype._s = function(val) { \r\n        if(typeof val ==='object') {\r\n            val = JSON.stringify(val); //触发了data中数据的set方法\r\n        }\r\n        return val;\r\n    }\r\n\r\n    Vue.prototype._v = function(text) { //创建文本节点\r\n        return createTextVNode(this,text);\r\n    }\r\n\r\n    Vue.prototype._render = function() { //调用vm实例上的render函数创建对应的虚拟DOM\r\n        let vm = this;\r\n        return vm.$options.render.call(vm); //所谓的render函数就是之前拼接字符串生成的函数\r\n    }\r\n\r\n    Vue.prototype._update = function(el) { //将虚拟DOM转变为真实DOM并且挂载到DOM树上\r\n        let vm = this;\r\n        let vdom = vm._render();\r\n        patch(el,vdom);\r\n    }\r\n}\r\n","import mergeOptions from \"./globalAPI\";\r\nimport { initMixin } from \"./init\";\r\nimport { initLifeCycle } from \"./lifecycle\";\r\n\r\nfunction Vue(options) {\r\n    this._init(options); //初始化Vue\r\n}\r\nVue.options = {};//全局的公共配置选项\r\n\r\n//init...方法是向vue实例的原型对象上添加方法\r\ninitLifeCycle(Vue);\r\ninitMixin(Vue);\r\n\r\nVue.mixin = function(options) { //给Vue构造函数上添加全局的api函数\r\n    Vue.options = mergeOptions(Vue.options,options)\r\n}\r\n\r\nexport default Vue;"],"names":["LIFECYCLE","strategy","forEach","hook","p","c","concat","mergeOptions","parent","child","options","key","mergeFiled","hasOwnProperty","methods","arrMethods","el","method","Array","prototype","console","log","from","arguments","item","observe","slice","__ob__","dep","notify","apply","id","Dep","subs","includes","target","push","deps","watcher","update","obj","ob","Observer","Object","defineProperty","enumerable","writable","configurable","isArray","walkArray","walk","keys","defineReactive","setPrototypeOf","dependArray","arr","depend","data","get","set","newVal","nextTick","fn","Promise","resolve","then","stack","pushTarget","popTarget","pop","length","Watcher","vm","cb","getter","lazy","dirty","user","value","call","oldVal","queueWatcher","queue","has","pending","flushScheduleQueue","coppyQueue","run","ELEMENT_TYPE","TEXT_TYPE","textRegExp","genText","text","test","match","tokens","lastIndex","exec","index","JSON","stringify","join","genChildren","children","res","map","type","genCode","genProps","attrs","attr","str","split","node","tagName","cname","qnameCapture","startTagOpen","RegExp","endTag","startTagClosed","attribute","parseHTML","html","ROOT_TYPE","root","textEnd","advance","n","parseStartTagOpen","resName","tag","parseAttrs","currentNode","resArry","parseStartTagClosed","parseEndTag","parseText","substr","indexOf","compileToFunction","ast","code","render","Function","callHooks","hooks","$options","getFunctionName","fun","name","undefined","ret","toString","initMixin","Vue","_init","initState","initTemplate","$mount","opts","template","document","querySelector","outerHTML","mountComponent","$nextTick","$watch","expr","initData","_data","val","getComputedProperty","context","_computedWatchers","evaluate","defineComputedProperty","computed","setter","getFuncName","initComputed","computeds","watchers","initWatch","watches","watch","handler","propName","updateComponet","dom","_vnode","_update","vnode","props","createElementVNode","createTextVNode","appendAttrs","style","setAttribute","createElement","appendChild","createTextNode","patch","oldVNode","newVNode","nodeType","parentNode","insertBefore","nextSibling","removeChild","initLifeCycle","_c","_s","_v","_render","vdom","mixin"],"mappings":"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"}